{
  "swagger": "2.0",
  "info": {
    "title": "IrisHub - GRPC Gateway",
    "version": "1.0.0"
  },
  "paths": {
    "/irishub/mint/params": {
      "get": {
        "summary": "Parameters queries the mint parameters",
        "operationId": "MintParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "params": {
                  "type": "object",
                  "properties": {
                    "mint_denom": {
                      "type": "string",
                      "title": "type of coin to mint"
                    },
                    "inflation": {
                      "type": "string",
                      "title": "inflation rate"
                    }
                  },
                  "title": "mint parameters"
                },
                "res": {
                  "type": "object",
                  "properties": {
                    "next_key": {
                      "type": "string",
                      "format": "byte",
                      "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently"
                    },
                    "total": {
                      "type": "string",
                      "format": "uint64",
                      "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
                    }
                  },
                  "description": "message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
                  "title": "PageResponse is to be embedded in gRPC response messages where the corresponding\nrequest message has used PageRequest"
                }
              },
              "title": "QueryParametersResponse is response type for the Query/Parameters RPC method"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/irishub/oracle/feeds": {
      "get": {
        "summary": "QueryFeedsRequest queries the feed list",
        "operationId": "Feeds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "feeds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "feed": {
                        "type": "object",
                        "properties": {
                          "feed_name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "aggregate_func": {
                            "type": "string"
                          },
                          "value_json_path": {
                            "type": "string"
                          },
                          "latest_history": {
                            "type": "string",
                            "format": "uint64"
                          },
                          "request_context_id": {
                            "type": "string",
                            "format": "byte"
                          },
                          "creator": {
                            "type": "string",
                            "format": "byte"
                          }
                        },
                        "title": "Feed defines the feed standard"
                      },
                      "service_name": {
                        "type": "string"
                      },
                      "providers": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "input": {
                        "type": "string"
                      },
                      "timeout": {
                        "type": "string",
                        "format": "int64"
                      },
                      "service_fee_cap": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "denom": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "string"
                            }
                          },
                          "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                        }
                      },
                      "repeated_frequency": {
                        "type": "string",
                        "format": "uint64"
                      },
                      "response_threshold": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "RUNNING",
                          "PAUSED",
                          "COMPLETED"
                        ],
                        "default": "RUNNING",
                        "description": "- RUNNING: RUNNING defines the running request context status.\n - PAUSED: PAUSED defines the paused request context status.\n - COMPLETED: COMPLETED defines the completed request context status.",
                        "title": "RequestContextState is a type alias that represents a request status as a byte"
                      }
                    },
                    "title": "FeedContext defines the feed context struct"
                  }
                }
              },
              "title": "QueryFeedsResponse is response type for the Query/Feeds RPC method"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/irishub/oracle/feeds/{feed_name}": {
      "get": {
        "summary": "Feed queries the feed",
        "operationId": "Feed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "feed": {
                  "type": "object",
                  "properties": {
                    "feed": {
                      "type": "object",
                      "properties": {
                        "feed_name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "aggregate_func": {
                          "type": "string"
                        },
                        "value_json_path": {
                          "type": "string"
                        },
                        "latest_history": {
                          "type": "string",
                          "format": "uint64"
                        },
                        "request_context_id": {
                          "type": "string",
                          "format": "byte"
                        },
                        "creator": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "title": "Feed defines the feed standard"
                    },
                    "service_name": {
                      "type": "string"
                    },
                    "providers": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "byte"
                      }
                    },
                    "input": {
                      "type": "string"
                    },
                    "timeout": {
                      "type": "string",
                      "format": "int64"
                    },
                    "service_fee_cap": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "denom": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          }
                        },
                        "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                      }
                    },
                    "repeated_frequency": {
                      "type": "string",
                      "format": "uint64"
                    },
                    "response_threshold": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "RUNNING",
                        "PAUSED",
                        "COMPLETED"
                      ],
                      "default": "RUNNING",
                      "description": "- RUNNING: RUNNING defines the running request context status.\n - PAUSED: PAUSED defines the paused request context status.\n - COMPLETED: COMPLETED defines the completed request context status.",
                      "title": "RequestContextState is a type alias that represents a request status as a byte"
                    }
                  },
                  "title": "FeedContext defines the feed context struct"
                }
              },
              "title": "QueryFeedResponse is response type for the Query/Feed RPC method"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "feed_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/irishub/oracle/feeds/{feed_name}/value": {
      "get": {
        "summary": "FeedValue queries the feed value",
        "operationId": "FeedValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "feed_values": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "string"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "FeedValue defines the feed result standard"
                  }
                }
              },
              "title": "QueryFeedValueResponse is response type for the Query/FeedValue RPC method"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "feed_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/irishub/random/queue": {
      "get": {
        "summary": "RandomRequestQueue queries the random request queue",
        "operationId": "RandomRequestQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "height": {
                        "type": "string",
                        "format": "int64"
                      },
                      "consumer": {
                        "type": "string",
                        "format": "byte"
                      },
                      "tx_hash": {
                        "type": "string",
                        "format": "byte"
                      },
                      "oracle": {
                        "type": "boolean"
                      },
                      "service_fee_cap": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "denom": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "string"
                            }
                          },
                          "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                        }
                      },
                      "service_context_id": {
                        "type": "string",
                        "format": "byte"
                      }
                    },
                    "title": "Request defines the random request standard"
                  }
                }
              },
              "title": "QueryRandomRequestQueueResponse is response type for the Query/RandomRequestQueue RPC method"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/irishub/random/randoms/{req_id}": {
      "get": {
        "summary": "Random queries the random result",
        "operationId": "Random",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "random": {
                  "type": "object",
                  "properties": {
                    "request_tx_hash": {
                      "type": "string",
                      "format": "byte"
                    },
                    "height": {
                      "type": "string",
                      "format": "int64"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "title": "Random defines the feed standard"
                }
              },
              "title": "QueryParametersResponse is response type for the Query/Random RPC method"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "req_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.query.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently"
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
      "title": "PageResponse is to be embedded in gRPC response messages where the corresponding\nrequest message has used PageRequest"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type_url": {
                "type": "string"
              },
              "value": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        }
      }
    },
    "irishub.mint.Params": {
      "type": "object",
      "properties": {
        "mint_denom": {
          "type": "string",
          "title": "type of coin to mint"
        },
        "inflation": {
          "type": "string",
          "title": "inflation rate"
        }
      },
      "title": "mint parameters"
    },
    "irishub.mint.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "type": "object",
          "properties": {
            "mint_denom": {
              "type": "string",
              "title": "type of coin to mint"
            },
            "inflation": {
              "type": "string",
              "title": "inflation rate"
            }
          },
          "title": "mint parameters"
        },
        "res": {
          "type": "object",
          "properties": {
            "next_key": {
              "type": "string",
              "format": "byte",
              "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently"
            },
            "total": {
              "type": "string",
              "format": "uint64",
              "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
            }
          },
          "description": "message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
          "title": "PageResponse is to be embedded in gRPC response messages where the corresponding\nrequest message has used PageRequest"
        }
      },
      "title": "QueryParametersResponse is response type for the Query/Parameters RPC method"
    },
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "irismod.oracle.Feed": {
      "type": "object",
      "properties": {
        "feed_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "aggregate_func": {
          "type": "string"
        },
        "value_json_path": {
          "type": "string"
        },
        "latest_history": {
          "type": "string",
          "format": "uint64"
        },
        "request_context_id": {
          "type": "string",
          "format": "byte"
        },
        "creator": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Feed defines the feed standard"
    },
    "irismod.oracle.FeedContext": {
      "type": "object",
      "properties": {
        "feed": {
          "type": "object",
          "properties": {
            "feed_name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "aggregate_func": {
              "type": "string"
            },
            "value_json_path": {
              "type": "string"
            },
            "latest_history": {
              "type": "string",
              "format": "uint64"
            },
            "request_context_id": {
              "type": "string",
              "format": "byte"
            },
            "creator": {
              "type": "string",
              "format": "byte"
            }
          },
          "title": "Feed defines the feed standard"
        },
        "service_name": {
          "type": "string"
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "input": {
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "format": "int64"
        },
        "service_fee_cap": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "denom": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            },
            "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
          }
        },
        "repeated_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "response_threshold": {
          "type": "integer",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "enum": [
            "RUNNING",
            "PAUSED",
            "COMPLETED"
          ],
          "default": "RUNNING",
          "description": "- RUNNING: RUNNING defines the running request context status.\n - PAUSED: PAUSED defines the paused request context status.\n - COMPLETED: COMPLETED defines the completed request context status.",
          "title": "RequestContextState is a type alias that represents a request status as a byte"
        }
      },
      "title": "FeedContext defines the feed context struct"
    },
    "irismod.oracle.FeedValue": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "FeedValue defines the feed result standard"
    },
    "irismod.oracle.QueryFeedResponse": {
      "type": "object",
      "properties": {
        "feed": {
          "type": "object",
          "properties": {
            "feed": {
              "type": "object",
              "properties": {
                "feed_name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "aggregate_func": {
                  "type": "string"
                },
                "value_json_path": {
                  "type": "string"
                },
                "latest_history": {
                  "type": "string",
                  "format": "uint64"
                },
                "request_context_id": {
                  "type": "string",
                  "format": "byte"
                },
                "creator": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "title": "Feed defines the feed standard"
            },
            "service_name": {
              "type": "string"
            },
            "providers": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "input": {
              "type": "string"
            },
            "timeout": {
              "type": "string",
              "format": "int64"
            },
            "service_fee_cap": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "denom": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                },
                "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
              }
            },
            "repeated_frequency": {
              "type": "string",
              "format": "uint64"
            },
            "response_threshold": {
              "type": "integer",
              "format": "int64"
            },
            "state": {
              "type": "string",
              "enum": [
                "RUNNING",
                "PAUSED",
                "COMPLETED"
              ],
              "default": "RUNNING",
              "description": "- RUNNING: RUNNING defines the running request context status.\n - PAUSED: PAUSED defines the paused request context status.\n - COMPLETED: COMPLETED defines the completed request context status.",
              "title": "RequestContextState is a type alias that represents a request status as a byte"
            }
          },
          "title": "FeedContext defines the feed context struct"
        }
      },
      "title": "QueryFeedResponse is response type for the Query/Feed RPC method"
    },
    "irismod.oracle.QueryFeedValueResponse": {
      "type": "object",
      "properties": {
        "feed_values": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            },
            "title": "FeedValue defines the feed result standard"
          }
        }
      },
      "title": "QueryFeedValueResponse is response type for the Query/FeedValue RPC method"
    },
    "irismod.oracle.QueryFeedsResponse": {
      "type": "object",
      "properties": {
        "feeds": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "feed": {
                "type": "object",
                "properties": {
                  "feed_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "aggregate_func": {
                    "type": "string"
                  },
                  "value_json_path": {
                    "type": "string"
                  },
                  "latest_history": {
                    "type": "string",
                    "format": "uint64"
                  },
                  "request_context_id": {
                    "type": "string",
                    "format": "byte"
                  },
                  "creator": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "title": "Feed defines the feed standard"
              },
              "service_name": {
                "type": "string"
              },
              "providers": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "input": {
                "type": "string"
              },
              "timeout": {
                "type": "string",
                "format": "int64"
              },
              "service_fee_cap": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "denom": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  },
                  "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                }
              },
              "repeated_frequency": {
                "type": "string",
                "format": "uint64"
              },
              "response_threshold": {
                "type": "integer",
                "format": "int64"
              },
              "state": {
                "type": "string",
                "enum": [
                  "RUNNING",
                  "PAUSED",
                  "COMPLETED"
                ],
                "default": "RUNNING",
                "description": "- RUNNING: RUNNING defines the running request context status.\n - PAUSED: PAUSED defines the paused request context status.\n - COMPLETED: COMPLETED defines the completed request context status.",
                "title": "RequestContextState is a type alias that represents a request status as a byte"
              }
            },
            "title": "FeedContext defines the feed context struct"
          }
        }
      },
      "title": "QueryFeedsResponse is response type for the Query/Feeds RPC method"
    },
    "irismod.service.RequestContextState": {
      "type": "string",
      "enum": [
        "RUNNING",
        "PAUSED",
        "COMPLETED"
      ],
      "default": "RUNNING",
      "description": "- RUNNING: RUNNING defines the running request context status.\n - PAUSED: PAUSED defines the paused request context status.\n - COMPLETED: COMPLETED defines the completed request context status.",
      "title": "RequestContextState is a type alias that represents a request status as a byte"
    },
    "irismod.random.QueryRandomRequestQueueResponse": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "height": {
                "type": "string",
                "format": "int64"
              },
              "consumer": {
                "type": "string",
                "format": "byte"
              },
              "tx_hash": {
                "type": "string",
                "format": "byte"
              },
              "oracle": {
                "type": "boolean"
              },
              "service_fee_cap": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "denom": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  },
                  "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                }
              },
              "service_context_id": {
                "type": "string",
                "format": "byte"
              }
            },
            "title": "Request defines the random request standard"
          }
        }
      },
      "title": "QueryRandomRequestQueueResponse is response type for the Query/RandomRequestQueue RPC method"
    },
    "irismod.random.QueryRandomResponse": {
      "type": "object",
      "properties": {
        "random": {
          "type": "object",
          "properties": {
            "request_tx_hash": {
              "type": "string",
              "format": "byte"
            },
            "height": {
              "type": "string",
              "format": "int64"
            },
            "value": {
              "type": "string"
            }
          },
          "title": "Random defines the feed standard"
        }
      },
      "title": "QueryParametersResponse is response type for the Query/Random RPC method"
    },
    "irismod.random.Random": {
      "type": "object",
      "properties": {
        "request_tx_hash": {
          "type": "string",
          "format": "byte"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Random defines the feed standard"
    },
    "irismod.random.Request": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64"
        },
        "consumer": {
          "type": "string",
          "format": "byte"
        },
        "tx_hash": {
          "type": "string",
          "format": "byte"
        },
        "oracle": {
          "type": "boolean"
        },
        "service_fee_cap": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "denom": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            },
            "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
          }
        },
        "service_context_id": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Request defines the random request standard"
    }
  }
}