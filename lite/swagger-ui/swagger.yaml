---
openapi: 3.0.0
info:
  description: >-
    A REST interface for state queries, transaction generation and
    broadcast.
  version: "0.17.0"
  title: IRISLCD Swagger-UI
  termsOfService: 'https://www.irisnet.org'
  contact:
    name: 边界智能
    url: 'https://bianjie.ai/'
    email: service@bianjie.ai
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Tendermint
    description: 'Tendermint APIs, such as query blocks, transactions and validatorset'
  - name: Tx
    description: 'Broadcast transactions'
  - name: Bank
    description: Bank module APIs
  - name: Stake
    description: Stake module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Distribution module APIs
  - name: Asset
    description: Asset module APIs
  - name: Rand
    description: Rand module APIs
  - name: Service
    description: Service module APIs
  - name: Oracle
    description: Oracle module APIs
  - name: CoinSwap
    description: CoinSwap module APIs
  - name: HTLC
    description: HTLC module APIs
  - name: Params
    description: Params module APIs
  - name: Gov
    description: Governance module APIs
  - name: Version
    description: Query app version
paths:
  /version:
    get:
      summary: Version of irislcd
      tags:
        - Version
      description: Get the version of irislcd running locally to compare against expected
      responses:
        '200':
          description: Plaintext version i.e. "v0.7.0"
  /node-version:
    get:
      summary: Version of the connected node
      tags:
        - Version
      description: >-
        Get the version of the SDK running on the connected node to compare
        against expected
      responses:
        '200':
          description: Plaintext version i.e. "v0.7.0"
        '500':
          description: failed to query node version
  /node-info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Tendermint
      responses:
        '200':
          description: Node status
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  network:
                    type: string
                    example: irishub-mainnet
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: '192.168.56.1:26656'
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.7.0
                  other:
                    description: more information on versions
                    type: array
                    items:
                      type: string
        '500':
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint
      description: Get if the node is currently syning with other nodes
      responses:
        '200':
          description: node sync status
          content:
            '*/*':
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
                    example: false
        '500':
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint
      responses:
        '200':
          description: The latest block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        '500':
          description: Server internal error
  /blocks/{height}:
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          schema:
            type: number
      responses:
        '200':
          description: The block at a specific height
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        '400':
          description: Invalid height
        '404':
          description: Request block height doesn't
        '500':
          description: Server internal error
  /block-results/latest:
    get:
      summary: Get the latest block result
      tags:
        - Tendermint
      responses:
        '200':
          description: The latest block result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockResultQuery'
        '500':
          description: Server internal error
  '/block-results/{height}':
    get:
      summary: Get a block result at a certain height
      tags:
        - Tendermint
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          schema:
            type: number
      responses:
        '200':
          description: The block result at a specific height
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockResultQuery'
        '400':
          description: Invalid height
        '404':
          description: Request block height doesn't
        '500':
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint
      responses:
        '200':
          description: The validator set at the latest block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: number
                  validators:
                    type: array
                    items:
                      $ref: '#/components/schemas/TendermintValidator'
        '500':
          description: Server internal error
  '/validatorsets/{height}':
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          schema:
            type: number
      responses:
        '200':
          description: The validator set at a specific block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: number
                  validators:
                    type: array
                    items:
                      $ref: '#/components/schemas/TendermintValidator'
        '400':
          description: Invalid height
        '404':
          description: Block at height not available
        '500':
          description: Server internal error
  '/txs/{hash}':
    get:
      summary: Get a Tx by hash
      tags:
        - Tendermint
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tx with the provided hash
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxQuery'
        '500':
          description: Internal Server Error
  /txs:
    get:
      tags:
        - Tendermint
      summary: Search transactions
      description: Search transactions by tag(s).
      parameters:
        - in: query
          name: tags
          description: >-
            Query transactions with tags such as action=send, sender=faa1ljemm0yznz58qxxs8xyak7fashcfxf5lssn6jm and recipient=faa1252wk9khhks260shar975x7fswqxltc8tgvtl8, just input {\"action\":\"send\",\"sender\":\"faa1ljemm0yznz58qxxs8xyak7fashcfxf5lssn6jm\",\"recipient\":\"faa1252wk9khhks260shar975x7fswqxltc8tgvtl8\"}
          required: true
          schema:
            type: object
            additionalProperties:
              type: string
        - in: query
          name: search_request_page
          description: 'Pagination page, default value 0'
          schema:
            type: integer
        - in: query
          name: search_request_size
          description: 'Pagination size, default value 100'
          schema:
            type: integer
      responses:
        '200':
          description: All Tx matching the provided tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TxQuery'
        '400':
          description: Invalid search tags
        '500':
          description: Internal Server Error
  /tx/broadcast:
    post:
      tags:
        - Tx
      summary: Broadcast a signed StdTx which is amino or json encoded
      description: >-
        Broadcast a signed StdTx which is amino or json encoded to
        a full iris node
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Tx was send and will probably be added to the next block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: The Tx was malformated
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  $ref: '#/components/schemas/StdTx'
        description: broadcast tx
        required: true
  '/bank/coins/{type}':
    get:
      tags:
        - Bank
      summary: Get coin type
      description: Get the detailed information about the given coin type
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  desc:
                    type: string
                  min_unit:
                    type: object
                    properties:
                      denom:
                        type: string
                      decimal:
                        type: integer
                  Units:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        decimal:
                          type: integer
                  origin:
                    type: integer
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /bank/token-stats:
    get:
      tags:
        - Bank
      summary: Get all token statistics
      description: >-
        Get token statistics, such as total loose tokens, total bonded token and
        total burned token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  loose_tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
                  bonded_tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
                  burned_tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
        '500':
          description: Internal Server Error
  /bank/token-stats/{symbol}:
    get:
      tags:
        - Bank
      summary: Get token statistics
      description: >-
        Get token statistics, such as total loose tokens, total bonded token and
        total burned token
      parameters:
        - name: symbol
          in: path
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  loose_tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
                  bonded_tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
                  burned_tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
        '500':
          description: Internal Server Error
  '/bank/accounts/{address}':
    get:
      summary: Get the account information on blockchain
      tags:
        - Bank
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account information on the blockchain
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: object
                    properties:
                      account_number:
                        type: string
                      address:
                        type: string
                      coins:
                        type: array
                        items:
                          $ref: '#/components/schemas/Coin'
                      public_key:
                        type: object
                        properties:
                          type:
                            type: string
                          value:
                            type: string
                      sequence:
                        type: string
        '204':
          description: No content about this account address
        '500':
          description: Server internel error
  '/bank/accounts/{address}/send':
    post:
      summary: Send coins
      description: Send coins
      tags:
        - Bank
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid request
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                recipient:
                  $ref: '#/components/schemas/Address'
                amount:
                  type: string
                  example: 1iris
        description: Parameters to send coins
        required: true
  /bank/accounts/{address}/burn:
    post:
      summary: Burn coins
      description: Burn coins
      tags:
        - Bank
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid request
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                amount:
                  type: string
                  example: 1iris
        description: Parameters to burn coins
        required: true
  '/bank/accounts/{address}/set-memo-regexp':
    post:
      summary: Set memo regexp
      description: Set memo regexp
      tags:
        - Bank
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid request
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                memo_regexp:
                  type: string
                  example: ^[A-Za-z0-9]+$
        description: Parameters to set memo regexp
        required: true
  '/stake/delegators/{delegatorAddr}/delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all delegations from a delegator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Delegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Submit delegation
      tags:
        - Stake
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid delegator address or delegation body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                delegate:
                  type: object
                  properties:
                    validator_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    delegation:
                      type: string
                      example: 10iris
        description: Delegation amount must be specified
  '/stake/delegators/{delegatorAddr}/unbonding-delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/UnbondingDelegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Submit unbonding
      tags:
        - Stake
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid delegator address or delegation body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                unbond:
                  type: object
                  properties:
                    validator_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    shares_amount:
                      type: string
                      example: '100'
                    shares_percent:
                      type: string
                      example: '0.1'
        description: Either specify the shares_amount or the shares_percent, not both
  '/stake/delegators/{delegatorAddr}/redelegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all redelegations from a delegator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Redelegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Submit redelegation
      tags:
        - Stake
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid delegator address or delegation body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                redelegate:
                  type: object
                  properties:
                    validator_src_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    validator_dst_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    shares_amount:
                      type: string
                      example: '100'
                    shares_percent:
                      type: string
                      example: '0.1'
        description: Either specify the shares_amount or the shares_percent, not both
  '/stake/delegators/{delegatorAddr}/validators':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/validators/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/txs':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all staking txs (i.e msgs) from a delegator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TxQuery'
        '204':
          description: No staking transaction about this delegator address
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/unbonding-delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/UnbondingDelegation'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  /stake/validators:
    get:
      summary: Get validators
      tags:
        - Stake
      parameters:
        - in: query
          name: page
          description: 'Pagination page, default value 1'
          schema:
            type: integer
        - in: query
          name: size
          description: 'Pagination size, default value 100'
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validator'
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Query the information from a single validator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Get all delegations from a validator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/unbonding-delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Get all unbonding delegations from a validator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnbondingDelegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/redelegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Get all outgoing redelegations from a validator
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Redelegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  /stake/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  loose_tokens:
                    type: string
                  bonded_tokens:
                    type: string
                  total_supply:
                    type: string
                  bonded_ratio:
                    type: string
        '500':
          description: Internal Server Error
  /stake/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
        - Stake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  unbonding_time:
                    type: string
                  max_validators:
                    type: integer
                  bond_denom:
                    type: string
        '500':
          description: Internal Server Error
  '/slashing/validators/{validatorPubKey}/signing-info':
    get:
      summary: Get sign info of given validator
      description: Get sign info of given validator
      tags:
        - Slashing
      parameters:
        - description: Bech32 validator public key
          name: validatorPubKey
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_height:
                    type: string
                  index_offset:
                    type: string
                  jailed_until:
                    type: string
                  missed_blocks_counter:
                    type: string
        '204':
          description: No sign info of this validator
        '400':
          description: Invalid validator public key
        '500':
          description: Internal Server Error
  '/slashing/validators/{validatorAddr}/unjail':
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      tags:
        - Slashing
      parameters:
        - description: Bech32 validator operator address
          name: validatorAddr
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid validator address or base_tx
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  /gov/proposals:
    post:
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      tags:
        - Gov
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid proposal body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                title:
                  type: string
                description:
                  type: string
                proposal_type:
                  type: string
                  example: PlainText
                proposer:
                  $ref: '#/components/schemas/Address'
                initial_deposit:
                  type: string
                  example: 10iris
                param:
                  $ref: '#/components/schemas/Param'
                comm_tax:
                  $ref: '#/components/schemas/CommTax'
                upgrade:
                  $ref: '#/components/schemas/Upgrade'
        description: >-
          valid value of `"proposal_type"` can be `"PlainText"`, `"Parameter"`,
          `"SoftwareUpgrade"`, `"SystemHalt"`,`"CommunityTaxUsage"`
        required: true
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      tags:
        - Gov
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          schema:
            type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: >-
            proposal status, valid values can be `"DepositPeriod"`,
            `"VotingPeriod"`, `"Passed"`, `"Rejected"`
          required: false
          schema:
            type: string
        - in: query
          name: limit
          description: 'limit to latest [number] proposals. Defaults to all proposals'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TextProposal'
        '400':
          description: Invalid query parameters
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/deposits':
    post:
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      tags:
        - Gov
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid proposal id or deposit body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                depositor:
                  $ref: '#/components/schemas/Address'
                amount:
                  type: string
                  example: 10iris
        required: true
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      tags:
        - Gov
      parameters:
        - name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deposit'
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/votes':
    post:
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      tags:
        - Gov
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid proposal id or vote body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                voter:
                  $ref: '#/components/schemas/Address'
                option:
                  type: string
                  example: 'Yes'
        description: >-
          valid value of `"option"` field can be `"Yes"`, `"No"`, `"NoWithVeto"`
          and `"Abstain"`
        required: true
    get:
      summary: Query voters
      description: Query voters information by proposalId
      tags:
        - Gov
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}':
    get:
      summary: Query a proposal
      description: Query a proposal by id
      tags:
        - Gov
      parameters:
        - name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextProposal'
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/deposits/{depositor}':
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      tags:
        - Gov
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
        - description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposit'
        '400':
          description: Invalid proposal id or depositor address
        '404':
          description: Found no deposit
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/votes/{voter}':
    get:
      summary: Query vote
      description: Query vote information by proposalId and voter address
      tags:
        - Gov
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
        - description: Bech32 voter address
          name: voter
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
        '400':
          description: Invalid proposal id or voter address
        '404':
          description: Found no vote
        '500':
          description: Internal Server Error

  '/distribution/{delegatorAddr}/withdraw-address':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    post:
      summary: Set withdraw address
      tags:
        - Distribution
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid proposal body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                withdraw_address:
                  $ref: '#/components/schemas/Address'
        required: true
    get:
      summary: Query withdraw address
      tags:
        - Distribution
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j
        '204':
          description: >-
            No other address have been specified as withdraw address, delegator
            address will be used.
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  /distribution/{delegatorAddr}/rewards/withdraw:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    post:
      summary: Withdraw rewards
      tags:
        - Distribution
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid proposal body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                validator_address:
                  $ref: '#/components/schemas/ValidatorAddress'
                is_validator:
                  type: boolean
        description: 'if is_validator is true, validator_address should not be presented'
        required: true
  '/distribution/{address}/rewards':
    parameters:
      - in: path
        name: address
        description: Validator operator address or delegator address
        required: true
        schema:
          type: string
    get:
      summary: Query all the rewards of validator or delegator
      tags:
        - Distribution
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  total_rewards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
                  delegations:
                    type: array
                    items:
                      validator:
                        $ref: '#/components/schemas/ValidatorAddress'
                      reward:
                        type: array
                        items:
                          $ref: '#/components/schemas/Coin'
                  commission:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
        '204':
          description: Invalid address
        '400':
          description: Invalid address
        '500':
          description: Internal Server Error
  '/service/definitions':
    post:
      summary: Define a service
      description: Define a service with JSON schemas
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                name:
                  type: string
                description:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                author:
                  $ref: '#/components/schemas/Address'
                author_description:
                  type: string
                schemas:
                  type: string
                  example: '{"input":{"type":"object"},"output":{"type":"object"},"error":{"type":"object"}}'
  '/service/definitions/{service-name}':
    get:
      summary: Query a service definition
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinition'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/service/bindings':
    post:
      summary: Bind a service
      description: Bind a service
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                service_name:
                  type: string
                provider:
                  $ref: '#/components/schemas/Address'
                deposit:
                  type: string
                  example: '10000iris'
                pricing:
                  type: string
                  example: '{"price":[{"denom":"iris-atto","amount":"1000000000000000000"}]}'
  '/service/bindings/{service-name}/{provider}':
    get:
      summary: Query a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBinding'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
    put:
      summary: Update a service binding
      description: Update a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                deposit:
                  type: string
                  example: '1iris'
                pricing:
                  type: string
                  example: '{"price":[{"denom":"iris-atto","amount":"1000000000000000000"}]}'
  '/service/bindings/{service-name}':
    get:
      summary: Query all bindings of a service definition
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceBinding'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/service/providers/{provider}/withdraw-address':
    get:
      summary: Query the withdrawal address of a provider
      tags:
        - Service
      parameters:
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/components/schemas/Address'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
    post:
      summary: Set a withdrawal address for a provider
      tags:
        - Service
      parameters:
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                withdraw_address:
                  $ref: '#/components/schemas/Address'
  '/service/bindings/{service-name}/{provider}/disable':
    post:
      summary: Disable an available service binding
      description: Disable an available service binding by the service name and provider
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
  '/service/bindings/{service-name}/{provider}/enable':
    post:
      summary: Enable an unavailable service binding
      description: Enable an unavailable service binding by the service name and provider
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                deposit:
                  type: string
                  example: '1iris'
  '/service/bindings/{service-name}/{provider}/refund-deposit':
    post:
      summary: Refund all deposit from a service binding
      description: Refund all deposit from a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
  '/service/requests':
    post:
      summary: Call a service
      description: Call a service with the specified params
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                service_name:
                  type: string
                providers:
                  type: array
                  items: 
                    $ref: '#/components/schemas/Address'
                consumer:
                  $ref: '#/components/schemas/Address'
                input:
                  type: string
                  example: '{"id":1}'
                service_fee_cap:
                  type: string
                  example: '1iris'
                timeout:
                  type: integer
                  example: '20'
                super_mode:
                  type: boolean
                  example: false
                repeated:
                  type: boolean
                  example: true
                repeated_frequency:
                  type: integer
                  example: '50'
                repeated_total:
                  type: integer
                  example: '100'
  '/service/requests/{request-id}':
    get:
      summary: Query a request by the request ID
      tags:
        - Service
      parameters:
        - in: path
          name: request-id
          description: request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequest'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/service/requests/{service-name}/{provider}':
    get:
      summary: Query active requests of a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: service-name
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceRequest'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/service/responses':
    post:
      summary: Respond to a service request
      description: Respond to a service request by the request ID
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                request_id:
                  type: string
                provider:
                  $ref: '#/components/schemas/Address'
                output:
                  type: string
                  example: '{"name":"irisnet"}'
                error:
                  type: string
                  example: ''
  '/service/responses/{request-id}':
    get:
      summary: Query a response by the request ID
      tags:
        - Service
      parameters:
        - in: path
          name: request-id
          description: request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/service/contexts/{request-context-id}/pause':
    post:
      summary: Pause a running request context
      description: Pause a running request context
      tags:
        - Service
      parameters:
        - in: path
          name: request-context-id
          description: request context ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                consumer:
                  $ref: '#/components/schemas/Address'
  '/service/contexts/{request-context-id}/start':
    post:
      summary: Start a paused request context
      description: Start a paused request context
      tags:
        - Service
      parameters:
        - in: path
          name: request-context-id
          description: request context ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                consumer:
                  $ref: '#/components/schemas/Address'
  '/service/contexts/{request-context-id}/kill':
    post:
      summary: Terminate a request context
      description: Terminate a request context
      tags:
        - Service
      parameters:
        - in: path
          name: request-context-id
          description: request context ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                consumer:
                  $ref: '#/components/schemas/Address'
  '/service/contexts/{request-context-id}':
    get:
      summary: Query a request context
      tags:
        - Service
      parameters:
        - in: path
          name: request-context-id
          description: request context ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestContext'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
    put:
      summary: Update a request context
      description: Update a request context
      tags:
        - Service
      parameters:
        - in: path
          name: request-context-id
          description: request context ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                providers:
                  type: array
                  items: 
                    $ref: '#/components/schemas/Address'
                service_fee_cap:
                  type: string
                  example: '1iris'
                timeout:
                  type: integer
                  example: '0'
                repeated_frequency:
                  type: integer
                  example: '0'
                repeated_total:
                  type: integer
                  example: '0'
                consumer:
                  $ref: '#/components/schemas/Address'
  '/service/requests/{request-context-id}/{batch-counter}':
    get:
      summary: Query requests by the request context ID and batch counter
      tags:
        - Service
      parameters:
        - in: path
          name: request-context-id
          description: request context ID
          required: true
          schema:
            type: string
        - in: path
          name: batch-counter
          description: batch counter
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceRequest'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/service/responses/{request-context-id}/{batch-counter}':
    get:
      summary: Query responses by the request context ID and batch counter
      tags:
        - Service
      parameters:
        - in: path
          name: request-context-id
          description: request context ID
          required: true
          schema:
            type: string
        - in: path
          name: batch-counter
          description: batch counter
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/service/fees/{provider}/withdraw':
    post:
      summary: Withdraw the earned fees of a provider
      description: Withdraw the earned fees of a provider
      tags:
        - Service
      parameters:
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
  '/service/fees/{provider}':
    get:
      summary: Query the earned fees of a provider
      tags:
        - Service
      parameters:
        - in: path
          name: provider
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarnedFees'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  /oracle/feeds:
    post:
      summary: Define a new feed,the feed will be in "paused" state
      description: Send transaction to define a feed
      tags:
        - Oracle
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service define body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                feed_name:
                  type: string
                aggregate_func:
                  type: string
                  example: "avg"
                value_json_path:
                  type: string
                  example: "quote"
                latest_history:
                  type: string
                  example: "2"
                description:
                  type: string
                creator:
                  $ref: '#/components/schemas/Address'
                service_name:
                  type: string
                providers:
                  type: array
                  items:
                    $ref: '#/components/schemas/Address'
                input:
                  type: string
                  example: '{"base":"link","quote":"usdt"}'
                timeout:
                  type: string
                  example: "2"
                service_fee_cap:
                  type: string
                  example: "1iris"
                repeated_frequency:
                  type: string
                  example: "5"
                repeated_total:
                  type: string
                  example: "-1"
                response_threshold:
                  type: integer
                  example: 1
        required: true
    get:
      summary: Query some feeds  by state
      tags:
        - Oracle
      parameters:
        - in: query
          name: state
          description: 'the state of feed,such as running|paused'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedContext'
        '500':
          description: Internal Server Error
  /oracle/feeds/{feed-name}/start:
    post:
      summary: Start a Feed in "paused" state
      description: Send transaction to start a feed
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: the name of the feed
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service define body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                creator:
                  $ref: '#/components/schemas/Address'
        required: true
  /oracle/feeds/{feed-name}/pause:
    post:
      summary: Pause a Feed in "running" state
      description: Send transaction to start a feed
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: the name of the feed
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service define body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                creator:
                  $ref: '#/components/schemas/Address'
        required: true
  /oracle/feeds/{feed-name}:
    put:
      summary: Modify Feed information and update service invocation parameters by feed creator
      description: Send transaction to define a feed
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: the name of the feed
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service define body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                feed_name:
                  type: string
                latest_history:
                  type: string
                  example: "5"
                description:
                  type: string
                creator:
                  $ref: '#/components/schemas/Address'
                providers:
                  type: array
                  items:
                    $ref: '#/components/schemas/Address'
                timeout:
                  type: string
                  example: "2"
                service_fee_cap:
                  type: string
                  example: "1iris"
                repeated_frequency:
                  type: string
                  example: "5"
                repeated_total:
                  type: string
                  example: "-1"
                response_threshold:
                  type: integer
                  example: 1
        required: true
    get:
      summary: Query a feed definition by name
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: the name of the feed
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedContext'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  /oracle/feeds/{feed-name}/values :
    get:
      summary: Query the value of a feed by name
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: 'the unique identifier of the Feed'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedValue'
        '500':
          description: Internal Server Error
  '/asset/tokens':
    post:
      summary: Issue a token
      tags:
        - Asset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                owner:
                  $ref: '#/components/schemas/Address'
                name:
                  type: string
                  example: 'Hello Kitty'
                symbol:
                  type: string
                  example: 'cat'
                initial_supply:
                  type: string
                  example: '1000000000'
                max_supply:
                  type: string
                  example: '2000000000'
                decimal:
                  type: integer
                  example: 18
                mintable:
                  type: boolean
                  example: true
        required: true
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
    get:
      summary: Query tokens by condition
      tags:
        - Asset
      parameters:
        - in: query
          name: owner
          description: the owner address of the destination token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/asset/tokens/{symbol}':
    get:
      summary: Query a token by symbol
      tags:
        - Asset
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Invalid symbol
        '500':
          description: Internal Server Error
    put:
      summary: Edit an existing token
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
      tags:
        - Asset
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                owner:
                  $ref: '#/components/schemas/Address'
                max_supply:
                  type: integer
                  example: '21000000'
                mintable:
                  type: string
                  example: ""
                name:
                  type: string
                  example: 'BTC Token'
  '/asset/tokens/{symbol}/mint':
    post:
      summary: Mint tokens to a specified address
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
      tags:
        - Asset
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                owner:
                  $ref: '#/components/schemas/Address'
                to:
                  $ref: '#/components/schemas/Address'
                amount:
                  type: integer
                  example: '21000000'
  '/asset/tokens/{symbol}/transfer':
    post:
      summary: Transfer the ownership of the token to a new owner
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
      tags:
        - Asset
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                src_owner:
                  $ref: '#/components/schemas/Address'
                dst_owner:
                  $ref: '#/components/schemas/Address'
  '/asset/tokens/{symbol}/fee':
    get:
      summary: Query the fees for issuing and minting the token with the given symbol
      tags:
        - Asset
      parameters:
        - in: path
          name: symbol
          description: the token symbol
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenFeesOutput'
        '400':
          description: Invalid symbol
        '500':
          description: Internal Server Error
  '/rand/rands':
    post:
      summary: Request a random number
      tags:
        - Rand
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                consumer:
                  $ref: '#/components/schemas/Address'
                block_interval:
                  type: integer
                  example: '10'
                oracle:
                  type: boolean
                  example: false
                service_fee_cap:
                  type: string
                  example: '1iris'
  '/rand/rands/{request-id}':
    get:
      summary: Query a random number by the specified request id
      tags:
        - Rand
      parameters:
        - in: path
          name: request-id
          description: the request id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rand'
        '400':
          description: Invalid request id
        '500':
          description: Internal Server Error
  '/rand/queue':
    get:
      summary: Query the pending requests with an optional height
      tags:
        - Rand
      parameters:
        - in: query
          name: height
          description: the destination block height
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request'
        '400':
          description: Invalid height if provided
        '500':
          description: Internal Server Error
  '/coinswap/liquidities/{voucher-coin-name}':
    get:
      summary: Query liquidity by the voucher coin name
      tags:
        - CoinSwap
      parameters:
        - in: path
          name: voucher-coin-name
          description: the liquidity voucher coin name of the token-iris pair
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinSwapLiquidity'
        '400':
          description: Invalid Liquidity voucher coin name
        '500':
          description: Internal Server Error
  '/coinswap/liquidities/{voucher-coin-name}/deposit':
    post:
      summary: Add liquidity by exact iris amount, calculated token and liquidity amount
      tags:
        - CoinSwap
      parameters:
        - in: path
          name: voucher-coin-name
          description: the liquidity voucher coin name of the token-iris pair
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                max_token:
                  type: integer
                  example: '10'
                exact_iris_amt:
                  type: integer
                  example: '10000000000000000000'
                min_liquidity:
                  type: integer
                  example: '10000000000000000000'
                deadline:
                  type: string
                  example: '30s'
                sender:
                  $ref: '#/components/schemas/Address'
  '/coinswap/liquidities/{voucher-coin-name}/withdraw':
    post:
      summary: Remove liquidity by exact liquidity amount, calculated iris and token amount
      tags:
        - CoinSwap
      parameters:
        - in: path
          name: voucher-coin-name
          description: the liquidity voucher coin name of the token-iris pair
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                min_token:
                  type: integer
                  example: '100'
                min_iris_amt:
                  type: integer
                  example: '10000000000000000000'
                withdraw_liquidity:
                  type: integer
                  example: '10000000000000000000'
                deadline:
                  type: string
                  example: '30s'
                sender:
                  $ref: '#/components/schemas/Address'
  '/coinswap/liquidities/buy':
    post:
      summary: Swap token by exact output, calculated input
      tags:
        - CoinSwap
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                input:
                  $ref: '#/components/schemas/CoinSwapInputOutput'
                output:
                  $ref: '#/components/schemas/CoinSwapInputOutput'
                deadline:
                  type: string
                  example: '30s'
  '/coinswap/liquidities/sell':
    post:
      summary: Swap token by exact input, calculated output
      tags:
        - CoinSwap
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                input:
                  $ref: '#/components/schemas/CoinSwapInputOutput'
                output:
                  $ref: '#/components/schemas/CoinSwapInputOutput'
                deadline:
                  type: string
                  example: '30s'
  '/htlc/htlcs':
    post:
      summary: create an HTLC
      tags:
        - HTLC
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                sender:
                  $ref: '#/components/schemas/Address'
                to:
                  $ref: '#/components/schemas/Address'
                receiver_on_other_chain:
                  type: string
                  example: '0xcd2a3d9f938e13cd947ec05abc7fe734df8dd826'
                hash_lock:
                  type: string
                  example: '327a66212cbee3756816e617b38f9dfe327a66212cbee3756816e617b38f9dfe'
                amount:
                  type: array
                  items:
                    $ref: '#/components/schemas/Coin'
                time_lock:
                  type: integer
                  example: '100'
                timestamp:
                  type: integer
                  example: '1568011909'
  '/htlc/htlcs/{hash-lock}':
    get:
      summary: query HTLC by hash-lock
      tags:
        - HTLC
      parameters:
        - in: path
          name: hash-lock
          description: the hash-lock of the HTLC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/htlc/htlcs/{hash-lock}/claim':
    post:
      summary: claim an opened HTLC
      tags:
        - HTLC
      parameters:
        - in: path
          name: hash-lock
          description: the hash-lock of the HTLC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                sender:
                  $ref: '#/components/schemas/Address'
                secret:
                  type: string
                  example: '5f5f5f6162636465666768696a6b6c6d6e6f707172737475767778797a5f5f5f'
  '/htlc/htlcs/{hash-lock}/refund':
    post:
      summary: refund from an expired HTLC
      tags:
        - HTLC
      parameters:
        - in: path
          name: hash-lock
          description: the hash-lock of the HTLC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                sender:
                  $ref: '#/components/schemas/Address'
  '/params':
    get:
      summary: Get the system params with an optional module
      tags:
        - Params
      parameters:
        - in: query
          name: module
          description: the name of the module,options:stake/mint/distr/slashing/service/asset/auth
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error

components:
  requestBodies:
    Unjailbody:
      content:
        application/json:
          schema:
            type: object
            properties:
              base_tx:
                $ref: '#/components/schemas/BaseTx'
      required: true
  schemas:
    CheckTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/KVPair'
      example:
        code: 0
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ''
          - ''
    DeliverTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/KVPair'
      example:
        code: 5
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ''
          - ''
    BroadcastTxCommitResult:
      type: object
      properties:
        check_tx:
          $ref: '#/components/schemas/CheckTxResult'
        deliver_tx:
          $ref: '#/components/schemas/DeliverTxResult'
        hash:
          $ref: '#/components/schemas/Hash'
        height:
          type: integer
    KVPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Msg:
      type: object
      properties:
        type:
          type: string
          example: irishub/bank/Send
        value:
          type: object
          properties:
            inputs:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j
                  coins:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
            outputs:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    example: faa18c9j808qgsvvuf7nz5xer973lwsw07ae3j79zv
                  coins:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
    Address:
      type: string
      description: bech32 encoded address
      example: faa1r93p0tpdlxgpac744rghvj9kqntvd54lc3msk2
    ValidatorAddress:
      type: string
      description: bech32 encoded address
      example: fva178ja5mcj5agnhyphga9f65nlzu59gcl5ktgte2
    Coin:
      type: object
      properties:
        denom:
          type: string
          example: 'iris-atto'
        amount:
          type: string
          example: '50'
    Hash:
      type: string
      example: EE5F3404034C524501629B56E0DDC38FAD651F04
    TxQuery:
      type: object
      properties:
        hash:
          type: string
        height:
          type: number
        tx:
          $ref: '#/components/schemas/StdTx'
        result:
          type: object
          properties:
            log:
              type: string
            gas_wanted:
              type: string
              example: '0'
            gas_used:
              type: string
              example: '0'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/KVPair'
        timestamp:
          type: string
          example: '2006-01-02T15:04:05Z07:00'
        coin_flow:
          type: array
          items:
            type: string
    StdTx:
      type: object
      properties:
        msg:
          type: array
          items:
            $ref: '#/components/schemas/Msg'
        fee:
          type: object
          properties:
            gas:
              type: string
              example: '10000'
            amount:
              type: array
              items:
                $ref: '#/components/schemas/Coin'
        memo:
          type: string
        signatures:
          type: array
          items:
            type: object
            properties:
              signature:
                type: string
                example: >-
                  MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
              pub_key:
                type: object
                properties:
                  type:
                    type: string
                    example: tendermint/PubKeySecp256k1
                  value:
                    type: string
                    example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
              account_number:
                type: string
                example: '0'
              sequence:
                type: string
                example: '0'
    BlockID:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/Hash'
        parts:
          type: object
          properties:
            total:
              type: number
              example: 0
            hash:
              $ref: '#/components/schemas/Hash'
    BlockHeader:
      type: object
      properties:
        chain_id:
          type: string
          example: irishub-mainnet
        height:
          type: number
          example: 1
        time:
          type: string
          example: '2017-12-30T05:53:09.287+01:00'
        num_txs:
          type: number
          example: 0
        last_block_id:
          $ref: '#/components/schemas/BlockID'
        total_txs:
          type: number
          example: 35
        last_commit_hash:
          $ref: '#/components/schemas/Hash'
        data_hash:
          $ref: '#/components/schemas/Hash'
        validators_hash:
          $ref: '#/components/schemas/Hash'
        next_validators_hash:
          $ref: '#/components/schemas/Hash'
        consensus_hash:
          $ref: '#/components/schemas/Hash'
        app_hash:
          $ref: '#/components/schemas/Hash'
        last_results_hash:
          $ref: '#/components/schemas/Hash'
        evidence_hash:
          $ref: '#/components/schemas/Hash'
        proposer_address:
          $ref: '#/components/schemas/Address'
    Block:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        txs:
          type: array
          items:
            type: string
        evidence:
          type: array
          items:
            type: string
        last_commit:
          type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockID'
            precommits:
              type: array
              items:
                type: object
                properties:
                  validator_address:
                    type: string
                  validator_index:
                    type: string
                    example: '0'
                  height:
                    type: string
                    example: '0'
                  round:
                    type: string
                    example: '0'
                  timestamp:
                    type: string
                    example: '2017-12-30T05:53:09.287+01:00'
                  type:
                    type: number
                    example: 2
                  block_id:
                    $ref: '#/components/schemas/BlockID'
                  signature:
                    type: string
                    example: >-
                      7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    BlockQuery:
      type: object
      properties:
        block_meta:
          type: object
          properties:
            header:
              $ref: '#/components/schemas/BlockHeader'
            block_id:
              $ref: '#/components/schemas/BlockID'
        block:
          $ref: '#/components/schemas/Block'
    BlockResultQuery:
      type: object
      properties:
        Height:
          type: string
        results:
          type: object
          properties:
            deliver_tx:
              type: object
              properties:
                code:
                  type: string
                data:
                  type: string
                log:
                  type: string
                info:
                  type: string
                gas_wanted:
                  type: string
                gas_used:
                  type: string
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/KVPair'
            end_block:
              type: object
              properties:
                validator_updates:
                  type: array
                  items:
                    type: object
                    properties:
                      pub_key:
                        type: string
                      power:
                        type: string
                consensus_param_updates:
                  type: object
                  properties:
                    blockSize:
                      type: string
                    evidence:
                      type: string
                    validator:
                      type: string
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/KVPair'
            begin_block:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/KVPair'

    BaseTx:
      type: object
      properties:
        chain_id:
          type: string
          example: irishub-test
        gas:
          type: string
          example: '20000'
        fee:
          type: string
          example: 0.4iris
        memo:
          type: string
          example: 'memo'
    TendermintValidator:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ValidatorAddress'
        pub_key:
          type: string
          example: >-
            fvp1zcjduepq6td0utl8pgjh9uud5mvev7z9k90562qpj2gq9sjruenmd4ypp62qgtf6ac
        power:
          type: string
          example: '1000'
        accum:
          type: string
          example: '1000'
    TextProposal:
      type: object
      properties:
        proposal_id:
          type: integer
        title:
          type: string
        description:
          type: string
        proposal_type:
          type: string
        proposal_status:
          type: string
        tally_result:
          type: object
          properties:
            'yes':
              type: string
            abstain:
              type: string
            'no':
              type: string
            no_with_veto:
              type: string
        submit_time:
          type: string
        total_deposit:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        voting_start_time:
          type: string
    Deposit:
      type: object
      properties:
        amount:
          type: string
          example: 10iris
        proposal_id:
          type: integer
        depositor:
          $ref: '#/components/schemas/Address'
    Vote:
      type: object
      properties:
        voter:
          type: string
        proposal_id:
          type: integer
        option:
          type: string
    Validator:
      type: object
      properties:
        operator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        consensus_pubkey:
          type: string
          example: >-
            fvp1zcjduepq20pzdy56z2k5ccdzz43g8g7vwfw4pzny3mhz6ckc444fj0avamhsazfp09
        jailed:
          type: boolean
        status:
          type: integer
        tokens:
          type: string
        delegator_shares:
          type: string
        description:
          type: object
          properties:
            moniker:
              type: string
            identity:
              type: string
            website:
              type: string
            details:
              type: string
        bond_height:
          type: string
          example: '0'
        unbonding_height:
          type: string
          example: '0'
        unbonding_time:
          type: string
          example: '1970-01-01T00:00:00Z'
        commission:
          type: object
          properties:
            rate:
              type: string
              example: '0'
            max_rate:
              type: string
              example: '0'
            max_change_rate:
              type: string
              example: '0'
            update_time:
              type: string
              example: '1970-01-01T00:00:00Z'
    Delegation:
      type: object
      properties:
        delegator_addr:
          type: string
        validator_addr:
          type: string
        shares:
          type: string
        height:
          type: integer
    UnbondingDelegation:
      type: object
      properties:
        delegator_addr:
          type: string
        validator_addr:
          type: string
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: integer
        min_time:
          type: integer
    Redelegation:
      type: object
      properties:
        delegator_addr:
          type: string
        validator_src_addr:
          type: string
        validator_dst_addr:
          type: string
        creation_height:
          type: integer
        min_time:
          type: integer
        initial_balance:
          type: string
        balance:
          type: string
        shares_src:
          type: string
        shares_dst:
          type: string
    DelegationDistInfo:
      type: object
      properties:
        delegator_addr:
          $ref: '#/components/schemas/Address'
        val_operator_addr:
          $ref: '#/components/schemas/Address'
        del_pool_withdrawal_height:
          type: string
          example: '0'
    Token:
      type: object
      properties:
        id:
          type: string
        family:
          type: string
        source:
          type: string
        symbol:
          type: string
        name:
          type: string
        decimal:
          type: integer
        initial_supply:
          type: string
        max_supply:
          type: string
        mintable:
          type: boolean
        owner:
          $ref: '#/components/schemas/Address'
    GatewayFeeOutput:
      type: object
      properties:
        exist:
          type: boolean
        fee:
          $ref: '#/components/schemas/Coin'
    TokenFeesOutput:
      type: object
      properties:
        exist:
          type: boolean
        issue_fee:
          $ref: '#/components/schemas/Coin'
        mint_fee:
          $ref: '#/components/schemas/Coin'
    Rand:
      type: object
      properties:
        request_tx_hash:
          type: string
        height:
          type: integer
        value:
          type: string
    Request:
      type: object
      properties:
        height:
          type: integer
        consumer:
          $ref: '#/components/schemas/Address'
        tx_hash:
          type: string
        oracle:
          type: boolean
        service_fee_cap:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    CoinSwapLiquidity:
      type: object
      properties:
        iris:
          $ref: '#/components/schemas/Coin'
        token:
          $ref: '#/components/schemas/Coin'
        liquidity:
          $ref: '#/components/schemas/Coin'
        fee:
          type: string
          example: '0.003'
    CoinSwapInputOutput:
      type: object
      properties:
        address:
          type: string
          example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j
        coin:
          $ref: '#/components/schemas/Coin'
    Param:
      type: object
      properties:
        subspace:
          type: string
          example: 'stake'
        key:
          type: string
          example: 'UnbondingTime'
        value:
          type: string
          example: '120h'
    CommTax:
      type: object
      properties:
        usage:
          type: string
          example: 'Burn'
        dest_address:
          type: string
          example: 'faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j'
        amount:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    TokenAddition:
      type: object
      properties:
        symbol:
          type: string
          example: 'eth'
        name:
          type: string
          example: 'ETH'
        decimal:
          type: integer
          example: 0
        min_unit_alias:
          type: string
          example: 'wei'
        initial_supply:
          type: string
          example: '100000000'
    Upgrade:
      type: object
      properties:
        version:
          type: string
          example: '2'
        software:
          type: string
          example: 'https://github.com/irisnet/irishub/releases/tag/v0.15.2'
        switch_height:
          type: string
          example: '100'
        threshold:
          type: string
          example: '0.8'
    Feed:
      type: object
      properties:
        feed_name:
          type: string
          example: feed-eth-price
        description:
          type: string
          example: 'get the price of eth'
        aggregate_func:
          type: string
          example: 'min'
        value_json_path:
          type: string
          example: 'data.eth.price'
        latest_history:
          type: string
          example: "10"
        request_context_id:
          type: string
          example: 'the request id of calling a service'
        creator:
          $ref: '#/components/schemas/Address'
          example: 'faa1fpdpm5p5styjmqptlc522y6qgxw807uk9p9hce'
    FeedContext:
      type: object
      properties:
        feed:
          $ref: '#/components/schemas/Feed'
        service_name:
          type: string
          example: 'the name of service'
        providers:
          $ref: '#/components/schemas/Address'
          example: ['faa1fpdpm5p5styjmqptlc522y6qgxw807uk9p9hce']
        input:
          type: string
          example: 'the data of calling a service'
        timeout:
          type: integer
          example: "10"
        service_fee_cap:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        repeated_frequency:
          type: integer
          example: "5"
        repeated_total:
          type: integer
          example: "-1"
        response_threshold:
          type: integer
          example: 1
        state:
          type: byte
          example: 0
    FeedValue:
      type: object
      properties:
        data:
          type: string
        timestamp:
          type: string
    ServiceDefinition:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        author:
          $ref: '#/components/schemas/Address'
        author_description:
          type: string
        schemas:
          type: string
          example: '{"input":{"type":"object"},"output":{"type":"object"},"error":{"type":"object"}}'
    ServiceBinding:
      type: object
      properties:
        service_name:
          type: string
        provider:
          $ref: '#/components/schemas/Address'
        deposit:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        pricing:
          type: string
          example: '{"price":[{"denom":"iris-atto","amount":"1000000"}]}'
        available:
          type: boolean
        disabled_time:
          type: string
    ServiceRequest:
      type: object
      properties:
        service_name:
          type: string
        provider:
          $ref: '#/components/schemas/Address'
        consumer:
          $ref: '#/components/schemas/Address'
        input:
          type: string
          example: '{"id":1}'
        service_fee:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        super_mode:
          type: boolean
        request_height:
          type: integer
        expiration_height:
          type: integer
        request_context_id:
          type: string
        request_context_batch_counter:
          type: integer
    ServiceResponse:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/Address'
        consumer:
          $ref: '#/components/schemas/Address'
        output:
          type: string
          example: '{"name":"irisnet"}'
        error:
          type: string
        request_context_id:
          type: string
        request_context_batch_counter:
          type: integer
    RequestContext:
      type: object
      properties:
        service_name:
          type: string
        providers:
          type: array
          items: 
            $ref: '#/components/schemas/Address'
        consumer:
          $ref: '#/components/schemas/Address'
        input:
          type: string
          example: '{"id":1}'
        service_fee_cap:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        timeout:
          type: integer
        super_mode:
          type: boolean
        repeated:
          type: boolean
        repeated_frequency:
          type: integer
        repeated_total:
          type: integer
        batch_counter:
          type: integer
        batch_request_count:
          type: integer
        batch_response_count:
          type: integer
        batch_state:
          type: string
        state:
          type: string
        response_threshold:
          type: integer
        module_name:
          type: string
    EarnedFees:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        coins:
          type: array
          items:
            $ref: '#/components/schemas/Coin'